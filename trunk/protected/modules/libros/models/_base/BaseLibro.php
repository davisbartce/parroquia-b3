<?php

/**
 * This is the model base class for the table "libro".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Libro".
 *
 * Columns in table "libro" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $ano
 * @property string $tomo
 * @property string $tipo
 *
 */
abstract class BaseLibro extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'libro';
    }

    public static function representingColumn() {
        return 'ano';
    }

    public function rules() {
        return array(
            array('ano, tomo, tipo', 'required'),
            array('ano', 'length', 'max'=>4),
            array('tomo', 'length', 'max'=>45),
            array('tipo', 'length', 'max'=>19),
            array('tipo', 'in', 'range' => array('BAUTIZOS','MATRIMONIOS','CONFIRMACIONES','PRIMERAS COMUNIONES')), // enum,
            array('id, ano, tomo, tipo', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'ano' => Yii::t('app', 'AÃ±o'),
                'tomo' => Yii::t('app', 'Tomo'),
                'tipo' => Yii::t('app', 'Tipo'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('ano', $this->ano, true);
        $criteria->compare('tomo', $this->tomo, true);
        $criteria->compare('tipo', $this->tipo, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}