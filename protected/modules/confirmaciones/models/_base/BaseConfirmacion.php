<?php

/**
 * This is the model base class for the table "confirmacion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Confirmacion".
 *
 * Columns in table "confirmacion" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $persona_id
 * @property string $fecha_confirmacion
 * @property string $iglesia
 * @property integer $padre_parroquia_id
 * @property integer $papa_id
 * @property integer $mama_id
 * @property string $feligreses_de
 * @property integer $padrino_id
 * @property integer $madrina_id
 * @property integer $tomo_id
 * @property integer $pagina
 * @property integer $numero
 * @property string $nota
 *
 */
abstract class BaseConfirmacion extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'confirmacion';
    }

    public static function representingColumn() {
        return 'fecha_confirmacion';
    }

    public function rules() {
        return array(
            array('persona_id, fecha_confirmacion, padre_parroquia_id, tomo_id, pagina, numero', 'required'),
            array('persona_id, padre_parroquia_id, papa_id, mama_id, padrino_id, madrina_id, tomo_id, pagina, numero', 'numerical', 'integerOnly'=>true),
            array('iglesia', 'length', 'max'=>60),
            array('feligreses_de', 'length', 'max'=>64),
            array('nota', 'length', 'max'=>150),
            array('iglesia, papa_id, mama_id, feligreses_de, padrino_id, madrina_id, nota', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, persona_id, fecha_confirmacion, iglesia, padre_parroquia_id, papa_id, mama_id, feligreses_de, padrino_id, madrina_id, tomo_id, pagina, numero, nota', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'persona_id' => Yii::t('app', 'Persona'),
                'fecha_confirmacion' => Yii::t('app', 'Fecha Confirmacion'),
                'iglesia' => Yii::t('app', 'Iglesia'),
                'padre_parroquia_id' => Yii::t('app', 'Padre Parroquia'),
                'papa_id' => Yii::t('app', 'Papa'),
                'mama_id' => Yii::t('app', 'Mama'),
                'feligreses_de' => Yii::t('app', 'Feligreses De'),
                'padrino_id' => Yii::t('app', 'Padrino'),
                'madrina_id' => Yii::t('app', 'Madrina'),
                'tomo_id' => Yii::t('app', 'Tomo'),
                'pagina' => Yii::t('app', 'Pagina'),
                'numero' => Yii::t('app', 'Numero'),
                'nota' => Yii::t('app', 'Nota'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('persona_id', $this->persona_id);
        $criteria->compare('fecha_confirmacion', $this->fecha_confirmacion, true);
        $criteria->compare('iglesia', $this->iglesia, true);
        $criteria->compare('padre_parroquia_id', $this->padre_parroquia_id);
        $criteria->compare('papa_id', $this->papa_id);
        $criteria->compare('mama_id', $this->mama_id);
        $criteria->compare('feligreses_de', $this->feligreses_de, true);
        $criteria->compare('padrino_id', $this->padrino_id);
        $criteria->compare('madrina_id', $this->madrina_id);
        $criteria->compare('tomo_id', $this->tomo_id);
        $criteria->compare('pagina', $this->pagina);
        $criteria->compare('numero', $this->numero);
        $criteria->compare('nota', $this->nota, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}